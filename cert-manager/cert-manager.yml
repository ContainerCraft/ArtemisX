apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager-application
  namespace: argocd
spec:
  project: default
  destination:
    namespace: cert-manager
    server: 'https://kubernetes.default.svc'
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - PruneLast=true
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
  source:
    path: ''
    repoURL: 'https://charts.jetstack.io'
    targetRevision: v1.5.3
    chart: cert-manager
    helm:
      values: |
        replicaCount: 1
        global:
          rbac:
            create: true
          logLevel: 2
          leaderElection:
            namespace: "kube-system"
        installCRDs: false
        image:
          repository: quay.io/jetstack/cert-manager-controller
          pullPolicy: IfNotPresent
        serviceAccount:
          create: true
          automountServiceAccountToken: true
        securityContext:
          runAsNonRoot: true
        prometheus:
          enabled: true
          servicemonitor:
            enabled: false
            prometheusInstance: default
            targetPort: 9402
            path: /metrics
            interval: 60s
            scrapeTimeout: 30s
        webhook:
          replicaCount: 1
          timeoutSeconds: 10
          securityContext:
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
          image:
            repository: quay.io/jetstack/cert-manager-webhook
            pullPolicy: IfNotPresent
          serviceAccount:
            create: true
            automountServiceAccountToken: true
          securePort: 10250
          hostNetwork: false
          serviceType: ClusterIP
        cainjector:
          enabled: true
          replicaCount: 1
          securityContext:
            runAsNonRoot: true
          image:
            repository: quay.io/jetstack/cert-manager-cainjector
            pullPolicy: IfNotPresent
          serviceAccount:
            create: true
            automountServiceAccountToken: true
        startupapicheck:
          enabled: true
          securityContext:
            runAsNonRoot: true
          timeout: 1m
          backoffLimit: 4
          jobAnnotations:
            helm.sh/hook: post-install
            helm.sh/hook-weight: "1"
            helm.sh/hook-delete-policy: hook-succeeded
          image:
            repository: quay.io/jetstack/cert-manager-ctl
            pullPolicy: IfNotPresent
          rbac:
            annotations:
              helm.sh/hook: post-install
              helm.sh/hook-weight: "-5"
              helm.sh/hook-delete-policy: hook-succeeded
          serviceAccount:
            create: true
            annotations:
              helm.sh/hook: post-install
              helm.sh/hook-weight: "-5"
              helm.sh/hook-delete-policy: hook-succeeded
            automountServiceAccountToken: true
